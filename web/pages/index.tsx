import type { NextPage } from "next";
import { GetStaticProps, GetServerSideProps } from "next";
import Head from "next/head";
import { useTranslation } from "react-i18next";
import { Footer } from "../components/Footer/Footer";
import { Header } from "../components/Header/Header";
import { SearchSoundGifInput } from "../components/SearchSoundGifInput/SearchSoundGifInput";
import { SoundGifsList } from "../components/SoundGifsList/SoundGifsList";
import { SoundgifDTO } from "../domain/sound-gif.dto";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { ClockIcon, FireIcon, SearchIcon } from "@heroicons/react/solid";
import React from "react";
import { useApi } from "../hooks/api/useApi.hook";
import { useState, useEffect } from "react";
import { Howler } from "howler";
// import { unmute } from "../tools/unmute";

type HomeProps = {
  soundGifs: SoundgifDTO[];
};

const Home: NextPage<HomeProps> = ({ soundGifs }) => {
  const { t } = useTranslation();
  const [soundGifsSearchResults, setSoundGifSearchResult] = useState<SoundgifDTO[]>([]);

  const updateSoundGifSearchResults = (soundGifs: SoundgifDTO[]) => {
    setSoundGifSearchResult(soundGifs);
  };

  useEffect(function mount() {
    // create empty buffer and play it
    var audioContext = Howler.ctx;
    // unmute(audioContext, true, true);
  }, []);

  const mostRecentSoundGifs = (
    <SoundGifsList
      soundGifs={soundGifs}
      title={t("most_recent_soundgif_title")}
      icon={<ClockIcon color="#6565F1" className="h-6 w-6" />}
    />
  );

  const mostSharedSoundGifs = (
    <SoundGifsList
      soundGifs={soundGifs}
      title={t("most_shared_soundgif_title")}
      icon={<FireIcon color="#E449A3" className="h-6 w-6" />}
    />
  );

  const searchResults = (
    <SoundGifsList
      soundGifs={soundGifsSearchResults}
      title={t("results")}
      icon={<SearchIcon color="#E449A3" className="h-6 w-6" />}
    />
  );

  return (
    <div className="bg-black">
      <Head>
        <title>Vozo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <Header />
        <main className="relative overflow-hidden">
          <div className="flex flex-col items-center justify-space container mx-auto">
            <SearchSoundGifInput updateSearchResultCallback={updateSoundGifSearchResults} />
            {soundGifsSearchResults.length > 0 ? searchResults : [mostRecentSoundGifs, mostSharedSoundGifs]}
          </div>
        </main>
      </div>
      <Footer />
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ locale }: { locale?: string | undefined }) => {
  const buildingTimeApiUrl = process.env.NEXT_PUBLIC_RUNNING_TIME_API_URL as string;
  const { findSoundGif, getAllCategories } = useApi(buildingTimeApiUrl);
  const categories = getAllCategories();
  const mostSharedSoundGifs = findSoundGif({ filters: { mostShared: true } });
  const mostRecentSoundGifs = findSoundGif({ filters: { mostRecent: true } });
  const soundGifs = await findSoundGif({});
  const soundGifsByCategories = categories.map(category => category);
  return {
    props: {
      soundGifs,
      ...(await serverSideTranslations(locale as string, ["common", "footer"])),
    },
  };
};

export default Home;
